{
 "cells": [
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    "ICU - Simulating ICU occupation\n",
    "###########################################################################\n",
    "This section shows how to use the ICU simulation from Episuite.\n",
    "The main class used for the ICU simulation is the :class:`~episuite.icu.ICUSimulation`,\n",
    "that can be used by specifying admissions and a duration distribution. For more\n",
    "information about how the simulation is performed, please see the class documentation.\n",
    "\n",
    ".. note:: In the example below, we will use a sample dataset that comes embedded\n",
    "          in Episuite with real data from the SARS-CoV-2 outbreak in south of Brazil.\n",
    "          This dataset can be accessed using the :meth:`~episuite.data.admissions_sample`\n",
    "          function from the :mod:`~episuite.data` module.\n",
    "\n",
    ".. seealso::\n",
    "\n",
    "   Module :mod:`episuite.distributions`\n",
    "      Documentation of the :py:mod:`episuite.distributions` module.\n",
    "      \n",
    "   Module :mod:`episuite.data`\n",
    "      Documentation of the :py:mod:`episuite.data` module.      \n",
    "      \n",
    "   `Forecasting critical care bed requirements for COVID-19 patients in England <https://cmmid.github.io/topics/covid19/ICU-projections.html>`_\n",
    "      This simulator is mainly based on this work by :cite:t:`ICUProjections2020`.\n",
    "\n",
    "   `Analysis of the SARS-CoV-2 outbreak in Rio Grande do Sul / Brazil <https://arxiv.org/abs/2007.10486>`_\n",
    "      This article :cite:t:`perone2020analysis` used this simulator and describes how it works."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import episuite\n",
    "from matplotlib import pyplot as plt\n",
    "\n",
    "from episuite import icu, durations, distributions\n",
    "from episuite import data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Preparing admissions\n",
    "The first step is to prepare the admissions that we want to use for simulation. These admissions can be observed and corrected for right-censoring or projected admissions to simulate different scenarios."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "sample_data = data.admissions_sample()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "sample_data_admissions = sample_data.groupby(\"DATE_START\").size().sort_index()\n",
    "sample_data_admissions = sample_data_admissions.resample(\"D\").sum().fillna(0)\n",
    "admissions = icu.ICUAdmissions(sample_data_admissions)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "fig = plt.figure(figsize=(15, 4))\n",
    "admissions.plot.bar()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Durations (length of stay)\n",
    "Let's now prepare the duration distribution, for the observed length of stay (LoS)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "dur = durations.Durations(sample_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "fig = plt.figure(figsize=(15, 5))\n",
    "dur.plot.timeplot(n_boot=100)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As we can see in the figure above, the LoS for the ICU occupation varies a lot in the beginning of the pandemic and then stabilizes later with a drop at the end due to a bias present in the dataset. This bias would ideally be corrected in order to do nowcasting or forecasting for different scenarios.\n",
    "\n",
    "Now, we are going to get a bootstrap distribution for the LoS and the instantiate the `ICUSimulation` using this distribution of stays and the admissions we observed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "duration_bootstrap = dur.get_bootstrap()\n",
    "icu_sim = icu.ICUSimulation(admissions, duration_bootstrap)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We will now simulate 5 rounds to incorporate the uncertainty of the LoS distribution. Usually you would do more than 50 rounds."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "results = icu_sim.simulate(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can now compute confidence intervals and inspect the simulation results. The method `get_simulation_results()` will give you a dataframe indexed by day and with each simulation as a column, representing different occupancy values for each day and taking the LoS uncertainty into account."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "results.get_simulation_results()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To compute confidence intervals, we just have to call the `hdi()` method. This will result a dataframe with the confidence intervals (lb95 = lower bound .95 HDI, ub95 = upper bound .95 HDI)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = results.hdi()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Visualization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "fig = plt.figure(figsize=(15, 5))\n",
    "df[\"mean_val\"].plot()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see here the results of the simulation and the uncertainty for each day. You can see that after stopping admissions, to have a drop to zero occupancy we need to wait for more than one month. This shows also how concerning are COVID-19 hospitalizations, they rise quickly but take a lot of time to dissipate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "fig = plt.figure(figsize=(16, 6))\n",
    "results.plot.lineplot()\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "celltoolbar": "Raw Cell Format",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
